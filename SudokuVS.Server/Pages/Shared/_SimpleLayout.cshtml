@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SudokuVS.Server
@using SudokuVS.Server.Infrastructure.Database.Models
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@{
    Layout = "_EmptyLayout";
    bool isAuthenticated = SignInManager.IsSignedIn(User);
}

<header class="header">
    <nav class="h-100 text-bg-dark d-flex align-items-center gap-4 px-2 box-shadow">
        <div class="h-100 d-flex align-items-center justify-content-center px-4 position-relative">
            <div class="d-flex gap-2 align-items-baseline justify-content-center">
                <div class="d-flex flex-column">
                    <span class="fs-4 fw-semibold">@Constants.ProductName</span>
                </div>

                @if (ViewBag.DisplayVersionInformation ?? false)
                {
                    string? version = Metadata.Version != null ? $"v{Metadata.Version.Major}.{Metadata.Version.Minor}.{Metadata.Version.Patch}" : null;
                    string? prereleaseIdentifier = Metadata.Version?.PrereleaseIdentifier();
                    bool isDebugVersion = Metadata.Version?.IsDebug() ?? false;

                    if (version != null)
                    {
                        <span class="small">@version</span>
                    }

                    if (!string.IsNullOrWhiteSpace(prereleaseIdentifier))
                    {
                        <span class="badge text-bg-light">@prereleaseIdentifier</span>
                    }

                    if (isDebugVersion)
                    {
                        <span class="badge text-bg-warning">DEBUG</span>
                    }
                }
            </div>
            <a class="stretched-link" href="/"></a>
        </div>

        <div class="flex-grow-1"></div>

        <div>
            <a class="h-100 p-1 btn btn-link text-white text-decoration-none" asp-area="Guides">
                Guides
            </a>
        </div>

        <div class="vr my-3"></div>

        <div class="d-flex gap-2">
            <a class="text-white" href="@Constants.GithubRepository">
                <i class="bi bi-github fs-4"></i>
            </a>
        </div>

        <div class="vr my-3"></div>

        <div class="d-flex align-items-center gap-4 pe-4 position-relative">
            @if (isAuthenticated)
            {
                <a id="manage" class="h-100 p-1 btn btn-link text-white text-decoration-none" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@(await UserManager.GetPublicName(User))</a>
                <div>
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="h-100 p-1 btn btn-link text-white text-decoration-none">Sign out</button>
                    </form>
                </div>
            }
            else
            {
                <a id="login" class="h-100 p-1 btn btn-link text-white text-decoration-none" asp-area="Identity" asp-page="/Account/Login">Sign in</a>
            }
        </div>
    </nav>
</header>

<main class="main">
    <div class="w-100 h-100 py-3 overflow-auto">
        @RenderBody()
    </div>
</main>

<footer class="footer d-flex align-items-center border-top ps-3 text-muted small">
    <div>
        &copy; 2024 - SudokuVS
        @{
            string? foundPrivacy = Url.Page("/Privacy", new { area = "" });
        }
        @if (foundPrivacy != null)
        {
            <a asp-area="" asp-page="/Privacy">Privacy</a>
        }
    </div>
</footer>

@section Head {
    @await RenderSectionAsync("Head", false)
}

@section Scripts {
    @await RenderSectionAsync("Scripts", false)
}