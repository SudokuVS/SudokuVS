@using SudokuVS.Sudoku.Models.Abstractions
<div class="row">
    <div class="col-3 text-end">
        Total
    </div>
    <div class="col">
        <div class="w-100 h-100 progress" role="progressbar" aria-valuemin="0" aria-valuenow="@GetValue()" aria-valuemax="@GetMaxValue()">
            <div class="@GetProgressBarStyle()" style="width: @GetValuePercent()">
                @GetValue() / @GetMaxValue()
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public IHiddenSudokuGrid? Grid { get; set; }

    [Parameter]
    public Color ProgressBarColor { get; set; }

    string GetValuePercent()
    {
        int max = GetMaxValue();
        if (max == 0)
        {
            return "0%";
        }

        int count = GetValue();
        int percent = count * 100 / max;
        return $"{percent}%";
    }

    int GetValue() => Grid == null ? 0 : Grid.Enumerate().Count(cell => cell is { IsLocked: false, IsEmpty: false });
    int GetMaxValue() => Grid == null ? 0 : 81 - Grid.Enumerate().Count(cell => cell.IsLocked);

    string GetProgressBarStyle()
    {
        string result = "progress-bar";

        result += ProgressBarColor switch
        {
            Color.Blue => " text-bg-info",
            Color.Grey => " text-bg-grey",
            Color.Yellow => " text-bg-yellow",
            _ => ""
        };

        return result;
    }

    public enum Color
    {
        Blue,
        Grey,
        Yellow
    }

}