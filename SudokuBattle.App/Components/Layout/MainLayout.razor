@inherits LayoutComponentBase

<div class="h-100 d-flex flex-column">
    <header class="text-bg-dark d-flex align-items-center gap-2 px-2" style="height:64px;">
        <div class="h-100 d-flex align-items-center justify-content-center px-4 position-relative">
            <div>
                <span class="fs-4 fw-semibold">Sudoku Battles</span>
                @if (_version != null)
                {
                    <span class="ms-1 small">@_version</span>
                }
            </div>
            <a class="stretched-link" href="/"></a>
        </div>

        <div class="flex-grow-1"></div>

        @if (PlayerName != null)
        {
            <div class="h-100 py-2">
                <div class="h-100 vr"></div>
            </div>

            <div class="d-flex align-items-baseline gap-1 px-4">
                <span>Player:</span>
                <span class="d-flex align-items-center justify-content-center fs-4 fw-semibold">
                    @PlayerName
                </span>
                <a class="small text-white" href="/setup">(edit)</a>
            </div>
        }
    </header>

    <hr class="p-0 m-0"/>

    <main class="flex-grow-1">
        <CascadingValue Value="PlayerName">
            @Body
        </CascadingValue>
    </main>
</div>

@inject NavigationManager Navigation;
@inject IJSRuntime JsRuntime;

@code {

    IJSObjectReference? _mainLayoutModule;
    string? _version;

    public string? PlayerName { get; set; }

    protected override void OnInitialized() => _version = Metadata.Version != null ? $"v{Metadata.Version}" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        _mainLayoutModule ??= await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./Components/Layout/MainLayout.razor.js");

        PlayerName = await _mainLayoutModule.InvokeAsync<string?>("readName");

        if (string.IsNullOrWhiteSpace(PlayerName))
        {
            Navigation.NavigateTo("/setup");
            return;
        }

        StateHasChanged();
    }

}